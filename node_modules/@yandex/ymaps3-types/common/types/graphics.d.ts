type FillRule = 'evenodd' | 'nonzero';
interface PaletteEntry {
    count: number;
    color: string;
}
type Palette = PaletteEntry[];
interface StrokeStyle {
    width?: number;
    opacity?: number;
    color?: string;
    palette?: Palette;
    simplifyPalette?: boolean;
    dash?: number[];
}
type Stroke = StrokeStyle[];
interface DrawingStyleIcon {
    readonly url: string;
    readonly offset?: [
        number,
        number
    ];
    readonly scale?: number;
}
type HideOutsideRule = {
    extent: number;
} | true | false;
interface DrawingStyle {
    zIndex?: number;
    fill?: string;
    fillOpacity?: number;
    fillRule?: FillRule;
    stroke?: Stroke;
    cursor?: string;
    interactive?: boolean;
    simplificationRate?: number;
    icon?: DrawingStyleIcon;
    element?: HTMLElement;
}
export { DrawingStyle, Palette, StrokeStyle, Stroke, DrawingStyleIcon, FillRule, HideOutsideRule };
