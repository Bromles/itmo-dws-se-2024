import fs from 'fs/promises';
import path from 'path';
import {prettierFormat} from '../utils/prettier-format';
import {IconDescription} from './fetch-icons';
import {SRC_ICONS_PATH} from './paths';

const WARNING = `/** Don't edit manually. Generated by script: ./tools/icons/generate-imports.ts */`;

export const generateImports = async (iconsDescription: IconDescription[], iconNames: string[]) => {
    const importList = iconsDescription
        .map((description) => `import ${description.name} from '../../static/icons/${description.name}.svg'`)
        .join('\n');

    const iconNamesObject = iconNames
        .map((iconName) => {
            const normalIcon = iconsDescription.find((description) => description.name === `${iconName}_24`);
            return `${iconName}:${normalIcon?.name ?? 'null'},`;
        })
        .join('\n');

    const fileContent = `
    ${WARNING}
    ${importList}
    
    import type {Icons} from './types';
    export const icons: Icons = {
        ${iconNamesObject}
    }`;
    const formattedContent = await prettierFormat(fileContent, 'typescript');
    await fs.writeFile(path.join(SRC_ICONS_PATH, 'icons.generated.ts'), formattedContent);
};
