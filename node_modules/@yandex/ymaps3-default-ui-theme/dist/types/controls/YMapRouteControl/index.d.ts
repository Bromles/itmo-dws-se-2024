import { BaseRouteResponse, LngLat, SearchResponse, SuggestResponse, YMap } from '@yandex/ymaps3-types';
import { RouteOptions, TruckParameters } from '@yandex/ymaps3-types/imperative/route';
import { CustomVuefyOptions } from '@yandex/ymaps3-types/modules/vuefy';
import { CustomSearch, CustomSuggest } from '../YMapSearchControl';
import { SelectWaypointArgs } from './YMapWaypointInput';
import './index.css';
export type WaypointsArray = Array<SelectWaypointArgs['feature'] | null>;
export type AvailableTypes = RouteOptions['type'];
export type CustomRoute = {
    params: RouteOptions;
    map: YMap;
};
export type YMapRouteControlProps = {
    geolocationTextInput?: string;
    clearFieldsText?: string;
    changeOrderText?: string;
    availableTypes?: AvailableTypes[];
    truckParameters?: TruckParameters;
    waypoints?: [LngLat | null, LngLat | null];
    waypointsPlaceholders?: [string, string];
    autofocus?: boolean;
    search?: (args: CustomSearch) => Promise<SearchResponse> | SearchResponse;
    suggest?: (args: CustomSuggest) => Promise<SuggestResponse> | SuggestResponse;
    route?: (args: CustomRoute) => Promise<BaseRouteResponse[]> | BaseRouteResponse[];
    onMouseMoveOnMap?: (coordinates: LngLat, index: number, lastCall: boolean) => void;
    onUpdateWaypoints?: (waypoints: WaypointsArray) => void;
    onRouteResult?: (result: BaseRouteResponse, type: AvailableTypes) => void;
    onBuildRouteError?: () => void;
};
declare const defaultProps: Readonly<{
    geolocationTextInput: "Моя геопозиция";
    clearFieldsText: "Сбросить";
    changeOrderText: "Поменять порядок";
    waypointsPlaceholders: string[];
    availableTypes: string[];
    autofocus: true;
}>;
type DefaultProps = typeof defaultProps;
export declare class YMapRouteControl extends ymaps3.YMapComplexEntity<YMapRouteControlProps, DefaultProps> {
    static defaultProps: Readonly<{
        geolocationTextInput: "Моя геопозиция";
        clearFieldsText: "Сбросить";
        changeOrderText: "Поменять порядок";
        waypointsPlaceholders: string[];
        availableTypes: string[];
        autofocus: true;
    }>;
    static [ymaps3.optionsKeyVuefy]: CustomVuefyOptions<YMapRouteControl>;
    private _control;
    private _router;
    constructor(props: YMapRouteControlProps);
    protected _onAttach(): void;
    protected _onUpdate(props: Partial<YMapRouteControlProps>): void;
    protected _onDetach(): void;
}
export {};
