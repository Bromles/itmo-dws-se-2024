import { LngLat, SearchResponse, SuggestResponse } from '@yandex/ymaps3-types';
import type { Feature as SearchResponseFeature } from '@yandex/ymaps3-types/imperative/search';
import { CustomSearch, CustomSuggest } from '../../YMapSearchControl';
import './index.css';
export type SelectWaypointArgs = {
    feature: SearchResponseFeature;
};
export type YMapWaypointInputProps = {
    type: 'from' | 'to';
    inputPlaceholder: string;
    value?: string;
    waypoint?: LngLat | null;
    geolocationTextInput?: string;
    search?: ({ params, map }: CustomSearch) => Promise<SearchResponse> | SearchResponse;
    suggest?: (args: CustomSuggest) => Promise<SuggestResponse> | SuggestResponse;
    onSelectWaypoint?: (args: SelectWaypointArgs | null) => void;
    onMouseMoveOnMap?: (coordinates: LngLat, lastCall: boolean) => void;
    onError?: () => void;
};
declare const defaultProps: Readonly<{
    geolocationTextInput: "My location";
}>;
/**
 * @internal
 */
export declare class YMapWaypointInput extends ymaps3.YMapComplexEntity<YMapWaypointInputProps, typeof defaultProps> {
    static defaultProps: Readonly<{
        geolocationTextInput: "My location";
    }>;
    private _detachDom?;
    private _suggestComponent?;
    private _rootElement;
    private _inputEl;
    private _indicator;
    private _locationButton;
    private _resetButton;
    private _mapListener;
    private _isBottomPosition;
    private _isHoverMode;
    private _isInputFocused;
    triggerFocus(): void;
    getValue(): string;
    constructor(props: YMapWaypointInputProps);
    protected _onAttach(): void;
    protected _onUpdate(diffProps: Partial<YMapWaypointInputProps>): void;
    protected _onDetach(): void;
    private _updateIndicatorStatus;
    private _resetInput;
    private _onUpdateWaypoint;
    private _onFocusInput;
    private _onBlurInput;
    private _submitWaypointInput;
    private _onKeydownInput;
    private _getGeolocation;
    private _search;
    private _onMapMouseLeave;
    private _onMapMouseMove;
    private _onMapFastClick;
}
export {};
