import type { EasingFunctionDescription } from '@yandex/ymaps3-types';
import type { CustomVuefyOptions } from '@yandex/ymaps3-types/modules/vuefy';
import './index.css';
/**
 * YMapRotateControl props
 */
export type YMapRotateControlProps = {
    /** Easing function for map location animation */
    easing?: EasingFunctionDescription;
    /** Map location animate duration */
    duration?: number;
};
declare const defaultProps: Readonly<{
    duration: 200;
}>;
type DefaultProps = typeof defaultProps;
export declare const YMapRotateControlVuefyOptions: CustomVuefyOptions<YMapRotateControl>;
/**
 * Display rotate control on a map.
 *
 * @example
 * ```javascript
 * const controls = new YMapControls({position: 'right'});
 * const {YMapRotateControl} = await ymaps3.import('@yandex/ymaps3-controls@0.0.1');
 * const rotateControl = new YMapRotateControl({});
 * controls.addChild(rotateControl);
 * map.addChild(controls);
 * ```
 */
export declare class YMapRotateControl extends ymaps3.YMapComplexEntity<YMapRotateControlProps, DefaultProps> {
    static defaultProps: Readonly<{
        duration: 200;
    }>;
    static [ymaps3.optionsKeyVuefy]: CustomVuefyOptions<YMapRotateControl>;
    private _control;
    private _rotateControl;
    constructor(props: YMapRotateControlProps);
    protected _onUpdate(): void;
}
export declare class InternalRotateControl extends ymaps3.YMapComplexEntity<YMapRotateControlProps, DefaultProps> {
    private _listener;
    private _element?;
    private _domDetach;
    private _isClick;
    private _controlCenterPosition?;
    private _startMovePosition?;
    private _startAzimuth?;
    constructor(props: YMapRotateControlProps);
    protected _onAttach(): void;
    protected _onDetach(): void;
    private _onMapUpdate;
    private _toggleMapRotate;
    private _onRotateStart;
    private _onRotateMove;
    private _onRotateEnd;
    private _addRotateEventListeners;
    private _removeRotateEventListeners;
}
export {};
