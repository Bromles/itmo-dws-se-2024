import { PropType, SlotsType } from 'vue';
import { YMap, YMapEntity, YMapProps } from '@yandex/ymaps3-types';
export type YandexMapSettings = Omit<YMapProps, 'projection'>;
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    modelValue: {
        type: PropType<YMap | null>;
        default: null;
    };
    value: {
        type: PropType<YMap | null>;
        default: null;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    width: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: StringConstructor;
        default: string;
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    /**
 * @description Settings for cart initialization.,
 *
 * You can modify this object or use map methods, such as setLocation/setBehaviors e.t.c.
 * @see https://yandex.ru/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#map-parms
 * @see https://yandex.com/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#map-parms
 */
    settings: {
        type: PropType<YandexMapSettings>;
        required: true;
    };
    /**
 * @description Makes settings readonly. Enable this if reactivity causes problems
 */
    readonlySettings: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
 * @description Always inserts actual user center or bounds (based on your input) on every location change
 * @note This prop will cause user location change on every settings update (if user did move since last time). Use it with caution.
 */
    realSettingsLocation: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
 * @description You can also add layers through <yandex-*> components
 *
 * Modifying this object after mount will cause no effect.
 *
 * Instead, please use map methods, such as addChild.
 * @see https://yandex.ru/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#layers
 * @see https://yandex.com/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#layers
 */
    layers: {
        type: PropType<YMapEntity<unknown>[]>;
        default: () => never[];
    };
    /**
 * @description Adds cursor: grab/grabbing to ymaps scheme layer
 */
    cursorGrab: {
        type: BooleanConstructor;
        default: boolean;
    };
}>, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    input(map: YMap | null): boolean;
    'update:modelValue'(map: YMap | null): boolean;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    modelValue: {
        type: PropType<YMap | null>;
        default: null;
    };
    value: {
        type: PropType<YMap | null>;
        default: null;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    width: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: StringConstructor;
        default: string;
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    /**
 * @description Settings for cart initialization.,
 *
 * You can modify this object or use map methods, such as setLocation/setBehaviors e.t.c.
 * @see https://yandex.ru/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#map-parms
 * @see https://yandex.com/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#map-parms
 */
    settings: {
        type: PropType<YandexMapSettings>;
        required: true;
    };
    /**
 * @description Makes settings readonly. Enable this if reactivity causes problems
 */
    readonlySettings: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
 * @description Always inserts actual user center or bounds (based on your input) on every location change
 * @note This prop will cause user location change on every settings update (if user did move since last time). Use it with caution.
 */
    realSettingsLocation: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
 * @description You can also add layers through <yandex-*> components
 *
 * Modifying this object after mount will cause no effect.
 *
 * Instead, please use map methods, such as addChild.
 * @see https://yandex.ru/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#layers
 * @see https://yandex.com/dev/maps/jsapi/doc/3.0/dg/concepts/map.html#layers
 */
    layers: {
        type: PropType<YMapEntity<unknown>[]>;
        default: () => never[];
    };
    /**
 * @description Adds cursor: grab/grabbing to ymaps scheme layer
 */
    cursorGrab: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & Readonly<{
    onInput?: ((map: YMap | null) => any) | undefined;
    "onUpdate:modelValue"?: ((map: YMap | null) => any) | undefined;
}>, {
    value: YMap | null;
    layers: YMapEntity<unknown, {}>[];
    modelValue: YMap | null;
    tag: string;
    width: string;
    height: string;
    zIndex: number;
    readonlySettings: boolean;
    realSettingsLocation: boolean;
    cursorGrab: boolean;
}, SlotsType<{
    default: {};
}>, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
