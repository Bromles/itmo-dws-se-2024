import { PropType, SlotsType } from 'vue';
import { YMapHint } from '@yandex/ymaps3-types/packages/hint';
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    value: {
        type: PropType<YMapHint | null>;
        default: null;
    };
    modelValue: {
        type: PropType<YMapHint | null>;
        default: null;
    };
    hintProperty: {
        type: StringConstructor;
        required: true;
    };
}>, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    input(item: YMapHint): boolean;
    'update:modelValue'(item: YMapHint): boolean;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    value: {
        type: PropType<YMapHint | null>;
        default: null;
    };
    modelValue: {
        type: PropType<YMapHint | null>;
        default: null;
    };
    hintProperty: {
        type: StringConstructor;
        required: true;
    };
}>> & Readonly<{
    onInput?: ((item: YMapHint) => any) | undefined;
    "onUpdate:modelValue"?: ((item: YMapHint) => any) | undefined;
}>, {
    value: YMapHint | null;
    modelValue: YMapHint | null;
}, SlotsType<{
    default: {
        content: string;
    };
}>, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
